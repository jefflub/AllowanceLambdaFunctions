package in.lubetk.allowance.db;

import java.util.Collection;
import java.util.HashMap;
import java.util.Map;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;

@DynamoDBTable(tableName = "Buckets")
public class Bucket
{
	private String bucketId;
	private String name;
	private int currentTotal;
	private int defaultAllocation;
	
	@DynamoDBHashKey
	@DynamoDBAutoGeneratedKey
	public String getBucketId()
	{
		return bucketId;
	}
	public void setBucketId(String bucketId)
	{
		this.bucketId = bucketId;
	}
	
	public String getName()
	{
		return name;
	}
	public void setName(String name)
	{
		this.name = name;
	}
	
	public int getCurrentTotal()
	{
		return currentTotal;
	}
	public void setCurrentTotal(int currentTotal)
	{
		this.currentTotal = currentTotal;
	}
	
	public int getDefaultAllocation()
	{
		return defaultAllocation;
	}
	public void setDefaultAllocation(int defaultAllocation)
	{
		this.defaultAllocation = defaultAllocation;
	}
	
	public static Bucket loadFromId( DynamoDBMapper mapper, String id )
	{
		return mapper.load(Bucket.class, id);
	}
	
	public static Map<String, Bucket> loadFromIds( DynamoDBMapper mapper, Collection<String> ids )
	{
		Map<String, Bucket> result = new HashMap<>();
		for ( String s : ids )
		{
			result.put(s, loadFromId(mapper, s));
		}
		return result;
	}

}
